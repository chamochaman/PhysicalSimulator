<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PhysicalSimulator</name>
    </assembly>
    <members>
        <member name="T:PhysicalSimulator.Menu">
            <summary>
            Esta clase representa el menú principal para acceder al simulador.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Menu.#ctor">
            <summary>
            Inicializa el WinForm
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Menu.button1_Click(System.Object,System.EventArgs)">
            <summary>
            Este método está asociado al botón de ingreso, dentro de éste, se revisa que el usuario y contraseña exista.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:PhysicalSimulator.Menu.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Menu.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:PhysicalSimulator.Menu.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:PhysicalSimulator.Object">
            <summary>
            Entidad base de la cual hereda Entity.
            </summary>
        </member>
        <member name="T:PhysicalSimulator.Program">
            <summary>
            The main class.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:PhysicalSimulator.Animation">
            <summary>
            Esta clase representa la animación de las entidades visibles, por medio de esta clase se puede dibujar en pantalla cualquier imagen en movimiento.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.sprites">
            <summary>
            Representa la lista de texturas que hacen parte de la animación
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.framesPerSecond">
            <summary>
            Representa la velocidad de actualización
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.elapsedTime">
            <summary>
            Representa el delta del tiempo
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.frames">
            <summary>
            Representa el número de sprites
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.currentFrame">
            <summary>
            Representa el indice del spite actual.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.looping">
            <summary>
            Representa si la animación es un bucle o no
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.state">
            <summary>
            Representa si la animación está activa o no
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Animation.Initialize(System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.Texture2D},System.Single,System.Boolean,System.Boolean)">
            <summary>
            Inicializa la los atributos de la animación
            </summary>
            <param name="textures">Representa una lista de texturas que harán parte de una animación</param>
            <param name="fps">Representa la velocidad con la que se actualizará la animación</param>
            <param name="looping">Representa si la animación es un bucle o solo se repite una vez</param>
            <param name="state">Representa si la animación está activa o no</param>
        </member>
        <member name="M:PhysicalSimulator.Animation.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Este método actualiza la animación
            </summary>
            <param name="gameTime">Recibe el delta del tiempo para saber si actualiza la animación o no.</param>
        </member>
        <member name="M:PhysicalSimulator.Animation.Draw(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Este método renderiza la animación.
            </summary>
            <param name="position">Recibe la posición para pintarla</param>
            <param name="spriteBatch">Recibe el SpriteBatch que le permitirá renderizar en pantalla.</param>
        </member>
        <member name="T:PhysicalSimulator.Game1">
            <summary>
            This is the main type for your game
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Game1.#ctor">
            <summary>
            game1
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Game1.Initialize">
            <summary>
            Allows the game to perform any initialization it needs to before starting to run.
            This is where it can query for any required services and load any non-graphic
            related content.  Calling base.Initialize will enumerate through any components
            and initialize them as well.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Game1.LoadContent">
            <summary>
            LoadContent will be called once per game and is the place to load
            all of your content.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Game1.UnloadContent">
            <summary>
            UnloadContent will be called once per game and is the place to unload
            all content.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Game1.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game to run logic such as updating the world,
            checking for collisions, gathering input, and playing audio.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:PhysicalSimulator.Game1.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            This is called when the game should draw itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="T:PhysicalSimulator.Entity">
            <summary>
            Clase entidad, esta clase es el objeto base de las escenas, cualquier objeto dentro de la escena herado su comportamiento y sus atributos.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.tag">
            <summary>
            Representa el alias con el que será nombrada la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.activeInScene">
            <summary>
            Representa si la entidad está activa o no.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.position">
            <summary>
            Representa la posición de la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.animation">
            <summary>
            Representa la animación que tiene la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.collider">
            <summary>
            Representa el colisionador asociado a la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.layer">
            <summary>
            Representa la capa de la escena en la cual se encuentra la entidad.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Entity.Initialize(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,System.Single)">
            <summary>
            Este método sirve para inicializar la entidad.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Entity.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Este método sirve para actualizar una entidad.
            </summary>
            <param name="gameTime">Recibe el delta del tiempo para poder actualizar los atributos de la entidad.</param>
        </member>
        <member name="M:PhysicalSimulator.Entity.SetActive(System.Boolean)">
            <summary>
            Este método permite activar o desactivar una entidad de la escena.
            </summary>
            <param name="state">Recibe el estado.</param>
        </member>
        <member name="M:PhysicalSimulator.Entity.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Este método sirve para renderizar en pantalla la entidad actual
            </summary>
            <param name="spriteBatch">Recibe un spriteBatch que es la clase que realiza la renderización en Monogame y XNA</param>
        </member>
        <member name="M:PhysicalSimulator.Entity.LoadContent(System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.Texture2D})">
            <summary>
            Este método carga el contenido de la entidad.
            </summary>
            <param name="textures">Recibe una lista de texturas que serán pasadas a la animación de la entidad.</param>
        </member>
        <member name="M:PhysicalSimulator.Entity.CompareTag(System.String)">
            <summary>
            Este método sirve para comparar entidad por un tag y no por su referencia.
            </summary>
            <param name="tag">recibe un tag a comparar</param>
            <returns>retorna true si el tag coincide con la entidad, de lo contrario retorna false.</returns>
        </member>
    </members>
</doc>
