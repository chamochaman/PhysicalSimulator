<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PhysicalSimulator</name>
    </assembly>
    <members>
        <member name="T:PhysicalSimulator.Menu">
            <summary>
            Esta clase representa el menú principal para acceder al simulador.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Menu.#ctor">
            <summary>
            Inicializa el WinForm
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Menu.button1_Click(System.Object,System.EventArgs)">
            <summary>
            Este método está asociado al botón de ingreso, dentro de éste, se revisa que el usuario y contraseña exista.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:PhysicalSimulator.Menu.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Menu.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:PhysicalSimulator.Menu.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:PhysicalSimulator.Collider">
            <summary>
            Esta clase representa todas las colisiones activadas en escena.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Collider.BoxCollider(PhysicalSimulator.Object,PhysicalSimulator.Object)">
            <summary>
            Este método verifica que un objeto no se estrelle contra otro objeto
            </summary>
            <param name="boxCollider">La entidad contra la cual se verifica el impácto de la entidad</param>
            <param name="entity">La entidad base que será la que colisionará contra la caja</param>
            <returns>retorna true si la colisión se dio, de lo contrario, retorna false</returns>
        </member>
        <member name="M:PhysicalSimulator.Collider.MouseCollider(PhysicalSimulator.Object)">
            <summary>
            Este método verifica si el rectangulo del puntero del mouse colisiona contra otro objeto.
            </summary>
            <param name="boxCollider">Objeto contra el cual se verificará la colisión del mouse</param>
            <returns>retorna true si la colisión se dio, de lo contrario, retorna false</returns>
        </member>
        <member name="M:PhysicalSimulator.Collider.ClickOnMouseCollider(PhysicalSimulator.Object)">
            <summary>
            Este método verifica si ademas de hacer colisión el mouse contra otro objeto, tambien se hizo click sobre el mismo.
            </summary>
            <param name="boxCollider">Objeto contra el cual se verificará la colisión del mouse y se presionará el click</param>
            <returns>retorna true si la colisión se dio, de lo contrario, retorna false</returns>
        </member>
        <member name="M:PhysicalSimulator.Collider.ClickOutMouseCollider(PhysicalSimulator.Object)">
            <summary>
            Este método verifica si luego de estar activa una colisón con click, el mouse salio de la colisión y realizó click en otro
            lugar diferente al objeto perteneciente a la colisión.
            </summary>
            <param name="boxCollider">Objeto contra el cual se verificará la colisión del mouse y se presionará el click</param>
            <returns>retorna true si la colisión se dio, de lo contrario, retorna false</returns>
        </member>
        <member name="T:PhysicalSimulator.Object">
            <summary>
            Entidad base de la cual hereda Entity.
            </summary>
        </member>
        <member name="P:PhysicalSimulator.Object.position">
            <summary>
            Representa la posición de un objeto en la escena.
            </summary>
        </member>
        <member name="P:PhysicalSimulator.Object.rectangle">
            <summary>
            Representa el rectangulo de un objeto en le escena, sirve para calcular las colisiones.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.state">
            <summary>
            Representa el estado del textbox, si esta activo en escena o no.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.size">
            <summary>
            
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.textBoxSize">
            <summary>
            Representa el tamaño máximo del textBox
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.wordSize">
            <summary>
            Representa el tamaño de la letra dentro del textBox
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.background">
            <summary>
            Representa la textura del fondo del textBox
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.fontLetters">
            <summary>
            Representa la textura con las letras para el textbox
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.fontNumbers">
            <summary>
            Representa la textura con los números para el textbox
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.collider">
            <summary>
            Representa el colisionador asociado a la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.spriteBatch">
            <summary>
            Representa la clase de XNA que permite renderizar en pantalla.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.keyboard">
            <summary>
            Representa la clase que captura las teclas presionadas.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.TextBox.input">
            <summary>
            Represeta el valor que tiene el textbox.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.TextBox.DrawText">
            <summary>
            Este método se encarga de pintar en pantalla las teclas que hayan sido presionadas cuando el textbox estaba activo.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.TextBox.TurnOnBuffer">
            <summary>
            Este método permite activar el estado del buffer que recibe lo ingresado por teclado
            </summary>
        </member>
        <member name="M:PhysicalSimulator.TextBox.getInput">
            <summary>
            Este método guarda la entrada del teclado en el textbox
            </summary>
        </member>
        <member name="M:PhysicalSimulator.TextBox.DrawBackGround">
            <summary>
            Este método pinta el fondo del textbox.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.TextBox.getState">
            <summary>
            Este método devuelve el estado actual del textbox
            </summary>
            <returns>retorna true si el estado está activo, sino, retorna false</returns>
        </member>
        <member name="M:PhysicalSimulator.TextBox.setState">
            <summary>
            Este método permite modificar el estado del textbox.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.TextBox.Collide">
            <summary>
            Este método verifica si existe colisión para cambiar el estado del textbox.
            </summary>
            <returns>retorna true si hay colisión, sino, retorna false</returns>
        </member>
        <member name="M:PhysicalSimulator.TextBox.#ctor(System.Boolean,System.Single,System.Single,System.Int32,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Constructor del textbox
            </summary>
            <param name="state"></param>
            <param name="size"></param>
            <param name="wordSize"></param>
            <param name="textBoxSize"></param>
            <param name="background"></param>
            <param name="font1"></param>
            <param name="font2"></param>
            <param name="sb"></param>
            <param name="position"></param>
            <param name="rectangle"></param>
        </member>
        <member name="T:PhysicalSimulator.Program">
            <summary>
            The main class.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Button.state">
            <summary>
            Representa el estado del botón, si esta activo en escena o no.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Button.size">
            <summary>
            
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Button.textBoxSize">
            <summary>
            Representa el tamaño máximo del botón
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Button.wordSize">
            <summary>
            Representa el tamaño de la letra dentro del botón
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Button.background">
            <summary>
            Representa la textura del fondo del botón
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Button.fontLetters">
            <summary>
            Representa la textura con las letras para el botón
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Button.fontNumbers">
            <summary>
            Representa la textura con los números para el botón
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Button.collider">
            <summary>
            Representa el colisionador asociado a la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Button.spriteBatch">
            <summary>
            Representa la clase de XNA que permite renderizar en pantalla.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Button.input">
            <summary>
            Represeta el valor que tiene el botón.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Button.DrawText">
            <summary>
            Este método se encarga de pintar en pantalla el texto dentro del botón.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Button.Pressed">
            <summary>
            Este método cambia el estado del botón si es presionado
            </summary>
            <returns></returns>
        </member>
        <member name="M:PhysicalSimulator.Button.DrawBackGround">
            <summary>
            Este método pinta el fondo del botón
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Button.getState">
            <summary>
            Este método retorna el estado del botón
            </summary>
            <returns></returns>
        </member>
        <member name="M:PhysicalSimulator.Button.setState">
            <summary>
            Este método cambia el estado del botón si se presionó
            </summary>
            <returns></returns>
        </member>
        <member name="M:PhysicalSimulator.Button.Collide">
            <summary>
            Este método verifica la colisión del botón con el mouse.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PhysicalSimulator.Animation">
            <summary>
            Esta clase representa la animación de las entidades visibles, por medio de esta clase se puede dibujar en pantalla cualquier imagen en movimiento.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.sprites">
            <summary>
            Representa la lista de texturas que hacen parte de la animación
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.framesPerSecond">
            <summary>
            Representa la velocidad de actualización
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.elapsedTime">
            <summary>
            Representa el delta del tiempo
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.frames">
            <summary>
            Representa el número de sprites
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.currentFrame">
            <summary>
            Representa el indice del spite actual.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.looping">
            <summary>
            Representa si la animación es un bucle o no
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Animation.state">
            <summary>
            Representa si la animación está activa o no
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Animation.Initialize(System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.Texture2D},System.Single,System.Boolean,System.Boolean)">
            <summary>
            Inicializa la los atributos de la animación
            </summary>
            <param name="textures">Representa una lista de texturas que harán parte de una animación</param>
            <param name="fps">Representa la velocidad con la que se actualizará la animación</param>
            <param name="looping">Representa si la animación es un bucle o solo se repite una vez</param>
            <param name="state">Representa si la animación está activa o no</param>
        </member>
        <member name="M:PhysicalSimulator.Animation.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Este método actualiza la animación
            </summary>
            <param name="gameTime">Recibe el delta del tiempo para saber si actualiza la animación o no.</param>
        </member>
        <member name="M:PhysicalSimulator.Animation.Draw(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Este método renderiza la animación.
            </summary>
            <param name="position">Recibe la posición para pintarla</param>
            <param name="spriteBatch">Recibe el SpriteBatch que le permitirá renderizar en pantalla.</param>
        </member>
        <member name="T:PhysicalSimulator.KeyBoardInput">
            <summary>
            Esta clase es la que captura la información proveniente del teclado.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.KeyBoardInput.PressedKeys">
            <summary>
            Representa una Hashtable con todas las teclas presionadas, esto con el fin de que el textbox solo atrape las teclas que se presionaron y se levantaron,
            y no lo haga por defecto con impulsos eléctricos provenientes del teclado.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.KeyBoardInput.#ctor">
            <summary>
            prepara la HashTable con todas las teclas.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.KeyBoardInput.getCurrentKeyboardInput(System.String,System.Int32)">
            <summary>
            Este método atrapa las teclas presionadas por teclado
            </summary>
            <param name="input">representa la entrada de datos</param>
            <param name="size">representa el máximo de caracteres que va a leer</param>
            <returns>retorna toda la cadena de teclas presionadas</returns>
        </member>
        <member name="M:PhysicalSimulator.KeyBoardInput.activedKeys">
            <summary>
            Este método reactiva las teclas que hayan sido presionadas y luego levantadas.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.KeyBoardInput.getKey(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Este método retorna un string asociado a la tecla presionada
            </summary>
            <param name="key">Representa la tecla presionada</param>
            <returns>retorna un string con la tecla presionada</returns>
        </member>
        <member name="T:PhysicalSimulator.Game1">
            <summary>
            This is the main type for your game
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Game1.#ctor">
            <summary>
            game1
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Game1.Initialize">
            <summary>
            Allows the game to perform any initialization it needs to before starting to run.
            This is where it can query for any required services and load any non-graphic
            related content.  Calling base.Initialize will enumerate through any components
            and initialize them as well.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Game1.LoadContent">
            <summary>
            LoadContent will be called once per game and is the place to load
            all of your content.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Game1.UnloadContent">
            <summary>
            UnloadContent will be called once per game and is the place to unload
            all content.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Game1.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game to run logic such as updating the world,
            checking for collisions, gathering input, and playing audio.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:PhysicalSimulator.Game1.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            This is called when the game should draw itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="T:PhysicalSimulator.Entity">
            <summary>
            Clase entidad, esta clase es el objeto base de las escenas, cualquier objeto dentro de la escena herado su comportamiento y sus atributos.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.tag">
            <summary>
            Representa el alias con el que será nombrada la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.activeInScene">
            <summary>
            Representa si la entidad está activa o no.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.position">
            <summary>
            Representa la posición de la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.animation">
            <summary>
            Representa la animación que tiene la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.collider">
            <summary>
            Representa el colisionador asociado a la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.layer">
            <summary>
            Representa la capa de la escena en la cual se encuentra la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.velocity">
            <summary>
            Representa el vector velocidad de la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.initialVelocity">
            <summary>
            Representa el vector con la velocidad inicial de la entidad, este es utilizado para calcular el movimiento de la misma.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.aceleration">
            <summary>
            Representa el vector con la aceleración de la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.angle">
            <summary>
            Representa el angulo de dirección de la entidad.
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.totalTime">
            <summary>
            Representa el tiempo total transcurrido desde que se empezo a actualizar la entidad
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.History">
            <summary>
            Representa el historico de la entidad alojado en una HashTable
            </summary>
        </member>
        <member name="F:PhysicalSimulator.Entity.rectangle">
            <summary>
            Representa el rectangulo de colisión de la entidad.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Entity.Initialize(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,System.Single)">
            <summary>
            Este método sirve para inicializar la entidad.
            </summary>
        </member>
        <member name="M:PhysicalSimulator.Entity.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Este método sirve para actualizar una entidad.
            </summary>
            <param name="gameTime">Recibe el delta del tiempo para poder actualizar los atributos de la entidad.</param>
        </member>
        <member name="M:PhysicalSimulator.Entity.SetActive(System.Boolean)">
            <summary>
            Este método permite activar o desactivar una entidad de la escena.
            </summary>
            <param name="state">Recibe el estado.</param>
        </member>
        <member name="M:PhysicalSimulator.Entity.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Este método sirve para renderizar en pantalla la entidad actual
            </summary>
            <param name="spriteBatch">Recibe un spriteBatch que es la clase que realiza la renderización en Monogame y XNA</param>
        </member>
        <member name="M:PhysicalSimulator.Entity.LoadContent(System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.Texture2D})">
            <summary>
            Este método carga el contenido de la entidad.
            </summary>
            <param name="textures">Recibe una lista de texturas que serán pasadas a la animación de la entidad.</param>
        </member>
        <member name="M:PhysicalSimulator.Entity.CompareTag(System.String)">
            <summary>
            Este método sirve para comparar entidad por un tag y no por su referencia.
            </summary>
            <param name="tag">recibe un tag a comparar</param>
            <returns>retorna true si el tag coincide con la entidad, de lo contrario retorna false.</returns>
        </member>
    </members>
</doc>
